{"version":3,"sources":["SidebarOption.jsx","Sidebar.jsx","firebase.jsx","TweetBox.jsx","Post.jsx","Feed.jsx","Widgets.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","type","onClick","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","alt","fontSize","Feed","test","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","p","Widgets","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uXAaeA,MATf,YAAgD,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACrC,OACE,sBAAKC,UAAS,wBAAmBH,GAAU,yBAA3C,UACE,cAACE,EAAD,IACA,6BAAKD,Q,gJC4BIG,MAtBf,WACE,OACE,sBAAKD,UAAU,UAAf,UACE,cAAC,IAAD,CAAaA,UAAU,yBAEvB,cAAC,EAAD,CAAeH,QAAM,EAACE,KAAMG,IAAUJ,KAAK,SAC3C,cAAC,EAAD,CAAeC,KAAMI,IAAYL,KAAK,YACtC,cAAC,EAAD,CAAeC,KAAMK,IAAuBN,KAAK,kBACjD,cAAC,EAAD,CAAeC,KAAMM,IAAiBP,KAAK,aAC3C,cAAC,EAAD,CAAeC,KAAMO,IAAoBR,KAAK,cAC9C,cAAC,EAAD,CAAeC,KAAMQ,IAAaT,KAAK,UACvC,cAAC,EAAD,CAAeC,KAAMS,IAAkBV,KAAK,YAC5C,cAAC,EAAD,CAAeC,KAAMU,IAAeX,KAAK,SAGzC,cAACY,EAAA,EAAD,CAAQC,QAAQ,WAAWX,UAAU,iBAAiBY,WAAS,EAA/D,uB,wBCZSC,E,MAJKC,EAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKMC,YC0CRC,MApDf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAmBA,OACE,qBAAK7B,UAAU,WAAf,SACE,iCACE,sBAAKA,UAAU,iBAAf,UACF,cAAC8B,EAAA,EAAD,CAAQC,IAAI,qLAChB,uBACK/B,UAAU,iBACVgC,SAAU,SAACC,GAAD,OAAON,EAAgBM,EAAEC,OAAOC,QAC/CA,MAAOT,EACFU,YAAY,oBACPC,KAAK,YAGX,uBACCrC,UAAU,sBACRmC,MAAOP,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAcI,EAAEC,OAAOC,QAExCC,YAAY,kBACZC,KAAK,SAGN,cAAC3B,EAAA,EAAD,CACE4B,QAxCU,SAACL,GACjBA,EAAEM,iBAEF1B,EAAG2B,WAAW,QAAQC,IAAI,CACxBC,YAAa,YACbC,SAAU,cACVC,UAAU,EACV9C,KAAM4B,EACNmB,MAAOjB,EACPkB,OACE,qLAGJnB,EAAgB,IAChBE,EAAc,KA2BRQ,KAAK,SACLrC,UAAU,wBAHZ,yB,6FCNO+C,EAjCFC,sBACX,WAA2DC,GAAS,IAAjEP,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,SAAoB7C,GAA+B,EAAzC8C,SAAyC,EAA/B9C,MAAM+C,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,OAC/C,OACE,sBAAK9C,UAAU,OAAOiD,IAAKA,EAA3B,UACE,qBAAKjD,UAAU,eAAf,SACE,cAAC8B,EAAA,EAAD,CAAQC,IAAKe,MAEf,sBAAK9C,UAAU,aAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,+BACG0C,EAAa,IACd,uBAAM1C,UAAU,sBAAhB,UACE,cAAC,IAAD,CAAkBA,UAAU,gBAD9B,KACiD2C,UAKrD,qBAAK3C,UAAU,0BAAf,SACE,8BAAIF,EAAJ,YAGJ,qBAAKiC,IAAKc,EAAOK,IAAI,KACrB,sBAAKlD,UAAU,eAAf,UACE,cAAC,IAAD,CAAuBmD,SAAS,UAChC,cAAC,IAAD,CAAYA,SAAS,UACrB,cAAC,IAAD,CAAoBA,SAAS,UAC7B,cAAC,IAAD,CAAaA,SAAS,sB,gBCMnBC,MAnCf,WACE,MAAyB3B,mBAAS,IAAlC,mBAAO4B,EAAP,KAAaC,EAAb,KAQA,OANAC,qBAAU,WACR1C,EAAG2B,WAAW,QAAQgB,YAAW,SAACC,GAAD,OAC/BH,EAASG,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAEzC,IAGD,sBAAK7D,UAAU,OAAf,UACA,qBAAKA,UAAU,eAAf,SACC,wCAGC,cAAC,EAAD,IAEA,cAAC,IAAD,UACGqD,EAAKM,KAAI,SAACG,GAAD,OACR,cAAC,EAAD,CAEApB,YAAaoB,EAAEpB,YACfC,SAAUmB,EAAEnB,SACZC,SAAUkB,EAAElB,SACZ9C,KAAMgE,EAAEhE,KACRgD,OAAQgB,EAAEhB,OACVD,MAAOiB,EAAEjB,OANJiB,EAAEhE,e,MCUFiE,MA5Bf,WACC,OACC,sBAAK/D,UAAU,UAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,cAAC,IAAD,CAAYA,UAAU,wBACtB,uBAAOoC,YAAY,iBAAiBC,KAAK,YAG1C,qBAAKrC,UAAU,2BAAf,SACC,wD,MCDWgE,MAXf,WACE,OAEE,cADA,CACA,OAAKhE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESiE,EAdS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,8BAAqBC,MACpB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76325bb5.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport \"./SidebarOption.css\";\n\nfunction SidebarOption({ active, text, Icon }) {\n  return (\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\n      <Icon />\n      <h2>{text}</h2>\n    </div>\n  );\n}\n\nexport default SidebarOption;","import React from \"react\";\nimport \"./Sidebar.css\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { Button } from \"@material-ui/core\";\n\nfunction Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <TwitterIcon className=\"sidebar__twitterIcon\" />\n\n      <SidebarOption active Icon={HomeIcon} text=\"Home\" />\n      <SidebarOption Icon={SearchIcon} text=\"Explore\" />\n      <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\n      <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\n      <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\n      <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\n      <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\n      <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\n\n      {/* Button -> Tweet */}\n      <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\n        Tweet\n      </Button>\n    </div>\n  );\n}\n\nexport default Sidebar;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAaZeDAlN1CQJ32LAO9AYd0Et7aRw35b2M\",\n  authDomain: \"tweet-72b98.firebaseapp.com\",\n  projectId: \"tweet-72b98\",\n  storageBucket: \"tweet-72b98.appspot.com\",\n  messagingSenderId: \"579720875587\",\n  appId: \"1:579720875587:web:697f613621ef96920e0ef6\",\n  measurementId: \"G-MW16JX4KVV\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n\nexport default db;\n","import React, { useState } from \"react\";\nimport \"./TweetBox.css\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport db from \"./firebase\";\n\nfunction TweetBox() {\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n  const [tweetImage, setTweetImage] = useState(\"\");\n\n  const sendTweet = (e) => {\n    e.preventDefault();\n\n    db.collection(\"test\").add({\n      displayName: \"Anushka B\",\n      username: \"anushkaaaaa\",\n      verified: true,\n      text: tweetMessage,\n      image: tweetImage,\n      avatar:\n        \"https://media-exp1.licdn.com/dms/image/C4D03AQG6XBdiWWOUZw/profile-displayphoto-shrink_400_400/0/1616661630170?e=1628121600&v=beta&t=YqamYq6gviGXL-VQrRLQOUsjuwuJ9mr0GcRXpy58DgM\",\n    });\n\n    setTweetMessage(\"\");\n    setTweetImage(\"\");\n  };\n\n  return (\n    <div className=\"tweetBox\">\n      <form>\n        <div className=\"tweetBox_input\">\n      <Avatar src=\"https://media-exp1.licdn.com/dms/image/C4D03AQG6XBdiWWOUZw/profile-displayphoto-shrink_400_400/0/1616661630170?e=1628121600&v=beta&t=YqamYq6gviGXL-VQrRLQOUsjuwuJ9mr0GcRXpy58DgM\" />\n  <input\n       className=\"tweetBox_input\"\n       onChange={(e) => setTweetMessage(e.target.value)}\n  value={tweetMessage}\n       placeholder=\"What's happening?\"\n            type=\"text\"\n          />\n        </div>\n      <input\n       className=\"tweetBox_inputImage\"\n         value={tweetImage}\n         onChange={(e) => setTweetImage(e.target.value)}\n          \n         placeholder=\"Enter image URL\"\n         type=\"text\"\n        />\n\n        <Button\n          onClick={sendTweet}\n          type=\"submit\"\n          className=\"tweetBox__tweetButton\"\n        >Tweet</Button></form>\n    </div>\n  );\n}\n\nexport default TweetBox;","import React, { forwardRef } from \"react\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\n\nconst Post = forwardRef(\n  ({ displayName, username, verified, text, image, avatar }, ref) => {\n    return (\n      <div className=\"post\" ref={ref}>\n        <div className=\"post__avatar\">\n          <Avatar src={avatar} />\n        </div>\n        <div className=\"post__body\">\n          <div className=\"post__header\">\n            <div className=\"post__headerText\">\n              <h3>\n                {displayName}{\" \"}\n                <span className=\"post__headerSpecial\">\n                  <VerifiedUserIcon className=\"post__badge\" /> @{username}\n                  \n                </span>\n              </h3>\n            </div>\n            <div className=\"post__headerDescription\">\n              <p>{text} </p>\n            </div>\n          </div>\n          <img src={image} alt=\"\" />\n          <div className=\"post__footer\">\n            <ChatBubbleOutlineIcon fontSize=\"small\" />\n            <RepeatIcon fontSize=\"small\" />\n            <FavoriteBorderIcon fontSize=\"small\" />\n            <PublishIcon fontSize=\"small\" />\n          </div>\n        </div>\n      </div>\n    );});\n\nexport default Post;","import React, { useState, useEffect } from \"react\";\nimport TweetBox from \"./TweetBox\";\nimport Post from \"./Post\";\nimport \"./Feed.css\";\nimport db from \"./firebase\";\nimport FlipMove from \"react-flip-move\";\n\nfunction Feed() {\n  const [test, setPosts] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"test\").onSnapshot((snapshot) =>\n      setPosts(snapshot.docs.map((doc) => doc.data()))\n    );\n  }, []);\n\n  return (\n    <div className=\"feed\">\n    <div className=\"feed__header\">\n     <h2>Home</h2>\n    </div>\n\n      <TweetBox />\n\n      <FlipMove>\n        {test.map((p) => (\n          <Post\n          key={p.text}\n          displayName={p.displayName}\n          username={p.username}\n          verified={p.verified}\n          text={p.text}\n          avatar={p.avatar}\n          image={p.image}\n          />\n        ))}\n    \n    </FlipMove>\n    </div>\n  );\n}\n\nexport default Feed;","import React from \"react\";\nimport \"./Widgets.css\";\n// import {\n//   TwitterTimelineEmbed,\n//   TwitterShareButton,\n//   TwitterTweetEmbed,\n// } from \"react-twitter-embed\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nfunction Widgets() {\n\treturn (\n\t\t<div className=\"widgets\">\n\t\t\t<div className=\"widgets__input\">\n\t\t\t\t<SearchIcon className=\"widgets__searchIcon\" />\n\t\t\t\t<input placeholder=\"Search Twitter\" type=\"text\" />\n\t\t\t</div>\n\n\t\t\t<div className=\"widgets__widgetContainer\">\n\t\t\t\t<h2>What's happening</h2>\n\n\t\t\t\t{/* <TwitterTweetEmbed tweetId={\"1399902342787604482\"} />\n\n        <TwitterTimelineEmbed\n          sourceType=\"profile\"\n          screenName=\"UN_Women\"\n          options={{ height: 400 }}\n        />\n\n        <TwitterShareButton\n          url={\"https://twitter.com/UN_Women\"}\n          options={{ text: \"Pride Month\", via: \"UN_Women\" }}\n        /> */}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Widgets;\n","import React from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    // BEM\n    <div className=\"app\">\n      <Sidebar />\n      <Feed />\n      <Widgets />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(\n\t\t\t({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\t\tgetCLS(onPerfEntry);\n\t\t\t\tgetFID(onPerfEntry);\n\t\t\t\tgetFCP(onPerfEntry);\n\t\t\t\tgetLCP(onPerfEntry);\n\t\t\t\tgetTTFB(onPerfEntry);\n\t\t\t}\n\t\t);\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}